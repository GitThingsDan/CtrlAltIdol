// El cambio de breakpoint de mobile a tablet (originalmente 428px), a algo más acorde con el breakpoint 'sm' de Bootstrap (576px), surgió exclusivamente a raíz de un intento de resolver la situación de que en el nuevo header (hecho con Bootstrap), alrededor del breakpoint 'sm', el efecto aplicado a .nav-item:active (de reducir su escalado) extrañamente también lo desplazaba a la derecha; se me ocurrió compensarlo con un translateX negativo, pero esto trajo consigo otras consecuencias indeseadas...finalmente, entre seguir complicándome con la tensión entre mi breakpoint y el de Bootstrap, preferí la alternativa de cambiarme al de Bootstrap.

/* RESETEO DE ESTILOS */
* {
	margin: 0;
	padding: 0;
}

.body {
	background: $purple-gradient;
	color: white;
	font-family: "Roboto Mono", monospace;

	ul {
		list-style: none;
	}

	.main {
		font-size: calc(0.7rem + 1vw);
		text-align: justify;
		@include paddingX(5%);
		a {
			color: white;
			font-weight: bolder;
			position: relative;
			text-decoration: none;
			transition: color 0.25s;
			// Créditos a https://cssanimation.rocks/animating-links/ por la idea del efecto a continuación: ::before(:hover::before), ::after(:hover::after):
			&::before {
				content: "";
				position: absolute;
				border-bottom: 0.02em solid;
				inset: 0 100% auto 0;
				transition: right 0.25s;
			}
			&:hover::before {
				right: 0;
			}
			&::after {
				content: "";
				position: absolute;
				border-top: 0.02em solid;
				inset: auto 0 0 100%;
				transition: left 0.25s;
			}
			&:hover::after {
				left: 0;
			}
			&:active {
				color: black;
			}
		}
		&BotonSidebar {
			animation: parpadeo 2s ease-in-out infinite alternate;
			background-color: $purple;
			border: thin solid black;
			position: sticky;
			// Transition también al border-color porque si no, al hacerle clic, el cambio de color del borde a blanco (el cual parece que es culpa de Bootstrap) es muy brusco:
			transition: border-color 0.2s, scale 0.5s;
			z-index: 5;
			@include bxshdw(1px);
			@include marginY(2vw, 0);
			&:hover {
				scale: 1.2;
			}
			// Por alguna extraña razón, al hacerle clic, el botón se vuelve transparente, por lo que le repetiré la propiedad de 'background-color: $purple':
			&:active {
				background-color: $purple;
			}
		}
		&Sidebar {
			width: fit-content;
			// Links del Sidebar:
			&-IndiceBox--Indice .nav-link {
				font-weight: normal;
				// Por alguna razón, el cambio de color de blanco a negro al hacer clic (:active) es brusco, y no reconoce la previa declaración de aplicar a todos los <a> un transition color...así que tuve que repetir 'color' en el siguiente transition mixin:
				@include transitionMulti((color, font-weight, scale), 0.25s);
				&:hover,
				&.active {
					font-weight: bold;
					scale: 1.05;
				}
				&.active {
					background-color: $purple-transparent;
				}
			}
		}
	}
}

/* REGLAS @MEDIA */
/* MOBILE - upper breakpoint: 575.98px, breakpoint 'sm' de Bootstrap (originalmente 428px, ancho de pantalla de iPhone 12/13 Pro Max) - */
@media only screen and (width <= 575.98px) {
	/* Abreviación de @media only screen and (max-width: 575.98px) { */
	/* HTML */
	html {
		// Según https://css-tricks.com/almanac/properties/s/scroll-padding/, las versiones 'longhand' de 'scroll-padding' ('scroll-padding-*') aún no tienen soporte en Chrome; a mí sí me funcionan, pero aún así dejaré comentada la siguiente línea (versión 'shorthand'), por si las moscas:
		// scroll-padding: 19vw 0 0 0;
		scroll-padding-top: 19vw;
		h2,
		h3,
		h4 {
			@include marginY(4vw, 2vw);
		}
		h3,
		h4 {
			text-align: center;
		}
		.mainBotonSidebar {
			font-size: 3.5vw;
			// Para situar el botón a la derecha (más cómodo para personas diestras), sólo en mobile:
			margin-left: 72vw;
			top: calc(25px + 13.25vw);
		}
	}
}

/* TABLET - upper breakpoint: 834.98px (iPad Pro, versión de 11 pulgadas) - */
@media only screen and (575.98px <= width <= 834.98px) {
	/* Abreviación de @media only screen and (min-width: 575.98px) and (max-width: 834.98px) { */
	/* HTML */
	html {
		// Según https://css-tricks.com/almanac/properties/s/scroll-padding/, las versiones 'longhand' de 'scroll-padding' ('scroll-padding-*') aún no tienen soporte en Chrome; a mí sí me funcionan, pero aún así dejaré comentada la siguiente línea (versión 'shorthand'), por si las moscas:
		// scroll-padding: 18.5vw 0 0 0;
		scroll-padding-top: 18.5vw;
		h2,
		h3,
		h4 {
			@include marginY(2vw, 1vw);
		}
		.mainBotonSidebar {
			font-size: 3vw;
			top: 14.5vw;
		}
	}
}

/* DESKTOP */
@media only screen and (834.98px <= width) {
	/* Abreviación de @media only screen and (min-width: 834.98px) { */
	/* HTML */
	html {
		// Según https://css-tricks.com/almanac/properties/s/scroll-padding/, las versiones 'longhand' de 'scroll-padding' ('scroll-padding-*') aún no tienen soporte en Chrome; a mí sí me funcionan, pero aún así dejaré comentada la siguiente línea (versión 'shorthand'), por si las moscas:
		// scroll-padding: 12.5vw 0 0 0;
		scroll-padding-top: 12.5vw;
		h2,
		h3,
		h4 {
			@include marginY(2vw, 1vw);
		}
		.mainBotonSidebar {
			font-size: 2vw;
			top: 10.25vw;
		}
	}
}

/* FIN DEL RESETEO DE ESTILOS */
/* FIN DEL RESETEO DE ESTILOS */
/* FIN DEL RESETEO DE ESTILOS */
